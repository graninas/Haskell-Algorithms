Еще Одно Руководство по Монадам (часть 4: Монада Maybe и монада списка)
Mike Vanier
http://mvanier.livejournal.com

Перевод: Гранин А. С.
graninas@gmail.com

By Mike Vanier

В предыдущих статьях этой серии мы изучали концептуальный базис монад, но обсуждение наше было слишком абстрактным. Теперь, когда вы, я надеюсь, поняли, что монады такое и для чего они нужны, пришло время для детального рассмотрения специфических монад. Это значит, что мы определим корректные воплощения класса типов <font color=blue>Monad</font> для множества различных понятий вычислений, которые мы увидели раньше. Мы используем наши знания, чтобы получить монадическую композицию в каждом конкретном случае через монадическое применение (оператор <font color=blue>>>=</font>), и с помощью монадных законов мы выведем определение <font color=blue>return</font>.
<habracut />
<h4>Монада <font color=blue>Maybe</font></h4>

Монаду <font color=blue>Maybe</font> обычно первой представляют в руководствах по Haskell, потому что она очень проста в использовании, реализации и понимании. Для начала взглянем на определение типа данных <font color=blue>Maybe</font>:

<blockquote><font color="#06c">data</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;a&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;Nothing&nbsp;<font color="#339933">|</font>&nbsp;Just&nbsp;a</blockquote>

Здесь указано, что <font color=blue>Maybe</font> - это конструктор типа, в который помещается определенный тип <font color=blue>a</font>, чтобы получить (конкретный) тип данных. Еще говорят, что <font color=blue>Maybe</font> - это "полиморфный" тип данных, смысл тот же. Так, если бы <font color=blue>a</font> был <font color=blue>Int</font>, мы бы получили:

<blockquote><font color="#06c">data</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;Nothing&nbsp;<font color="#339933">|</font>&nbsp;Just&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font></blockquote>

Только вот нам не нужно это писать непосредственно, так как абстрактное определение выше подходит ко всем типам.

Значение типа <font color=blue>Maybe a</font> может либо быть, либо отсутствовать. Если значение равно <font color=blue>Nothing</font> ("Ничто"), то его "как бы и нет", а если оно равно <font color=blue>Just x</font> для некоторого значения <font color=blue>x</font>, то это "просто" значение <font color=blue>x</font>. Можно думать об этом как о контейнере, в котором либо 0 элементов, либо он один. (Вспомните: я когда-то говорил, что монадические значения иногда ошибочно представляются в виде контейнеров. Это тот самый случай.)

Полиморфный тип <font color=blue>Maybe</font> полезен тем, что мы можем использовать его как модель "расширенной функции", которая либо производит что-то как выходное значение, либо терпит в этом крах и не может вернуть никакое значение. (То есть, такая функция может провалиться.) Это записывается так:

<blockquote>f&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;a&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;b</blockquote>

Функция <font color=blue>f</font> берет значение типа <font color=blue>a</font> и либо возвращает <font color=blue>Nothing</font> (признак неудачи), либо значение <font color=blue>Just x</font>, где у <font color=blue>x</font> тип <font color=blue>b</font>. Функции вроде <font color=blue>f</font> будут работать в монаде <font color=blue>Maybe</font>, и композиция двух таких функций выглядит следующим образом:

<blockquote>f&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;a&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;b&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;предполагаем,&nbsp;что&nbsp;f&nbsp;где-то&nbsp;определена</font><br/>
g&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;b&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;c&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;предполагаем,&nbsp;что&nbsp;g&nbsp;где-то&nbsp;определена</font><br/>
&nbsp;<br/>
h&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;a&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;c&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;монадическая&nbsp;композиция&nbsp;f&nbsp;и&nbsp;g</font><br/>
h&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;вспомним:&nbsp;&gt;=&gt;&nbsp;-&nbsp;это&nbsp;оператор&nbsp;монадической&nbsp;композиции</font></blockquote>

Мы говорили, что все монады должны быть конструкторами типов. <font color=blue>Maybe</font> - это конструктор типа, так что тут все хорошо. Но для того чтобы <font color=blue>Maybe</font> стал монадой, нам нужно создать экземпляр класса типов <font color=blue>Monad</font>, а это значит, что мы должны заполнить следующее определение:

<blockquote><font color="#06c">instance</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad">Monad</a></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;<font color="#06c">where</font><br/>
&nbsp;&nbsp;<font>&#40;</font><font color="#339933">&gt;&gt;=</font><font>&#41;</font>&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<i><font color="#5d478b">{-&nbsp;определение&nbsp;&gt;&gt;=&nbsp;для&nbsp;Maybe&nbsp;-}</font></i><br/>
&nbsp;&nbsp;<font>return</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<i><font color="#5d478b">{-&nbsp;определение&nbsp;return&nbsp;для&nbsp;Maybe&nbsp;-}</font></i></blockquote>

Как мы можем задать <font color=blue>(>>=)</font> и <font color=blue>return</font> для <font color=blue>Maybe</font>?

Сначала напишем каркас определения для <font color=blue>>>=</font>, покрывающий два возможных случая левого операнда типа <font color=blue>Maybe a</font>:

<blockquote>Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<i><font color="#5d478b">{-&nbsp;нужно&nbsp;дописать&nbsp;-}</font></i><br/>
Just&nbsp;x&nbsp;&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<i><font color="#5d478b">{-&nbsp;нужно&nbsp;дописать&nbsp;-}</font></i></blockquote>

где <font color=blue>x</font> имеет тип <font color=blue>a</font>. Левую часть определения можно написать и по-другому:

<blockquote><font>&#40;</font><font color="#339933">&gt;&gt;=</font><font>&#41;</font>&nbsp;Nothing&nbsp;&nbsp;f&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<i><font color="#5d478b">{-&nbsp;нужно&nbsp;дописать&nbsp;-}</font></i><br/>
<font>&#40;</font><font color="#339933">&gt;&gt;=</font><font>&#41;</font>&nbsp;<font>&#40;</font>Just&nbsp;x<font>&#41;</font>&nbsp;f&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<i><font color="#5d478b">{-&nbsp;нужно&nbsp;дописать&nbsp;-}</font></i></blockquote>

Но лучше все-таки, если оператор <font color=blue>(>>=)</font> задан как оператор, а не как функция, и Haskell нам это позволяет.

Для завершения этого определения подумаем, что мы хотим получить от монадической композиции в монаде <font color=blue>Maybe</font>. Давайте возьмем наш пример с функциями <font color=blue>f</font> и <font color=blue>g</font>, монадически их скомпонуем и получим функцию <font color=blue>h</font>:

<blockquote>f&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;a&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;b<br/>
g&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;b&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;c<br/>
h&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;a&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;c<br/>
h&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;g</blockquote>

Если мы передадим аргумент в функцию <font color=blue>f</font>, и она вернет <font color=blue>Nothing</font> (то есть, потерпит неудачу), то что должна вернуть функция <font color=blue>h</font>?

<blockquote>f&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;Nothing<br/>
h&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font>f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;g<font>&#41;</font>&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font color="#339933">???</font></blockquote>

Кажется очевидным, что если <font color=blue>f x</font> вернет <font color=blue>Nothing</font>, то и <font color=blue>h</font> тоже должна вернуть <font color=blue>Nothing</font>, поскольку если часть выражения (функция <font color=blue>f</font>) не смогла вернуть результат, то и все выражение (функция <font color=blue>h</font>) не сможет его вернуть. Единственный вариант, когда <font color=blue>h</font> возвращает значение, это когда <font color=blue>f</font> вернет результат (назовем его <font color=blue>y</font>), он будет передан функции <font color=blue>g</font>, и <font color=blue>g y</font> - тоже будет корректный результат. Если провалится <font color=blue>f</font> или <font color=blue>g</font>, то и <font color=blue>h</font> завершится неудачей, то есть, вычислением <font color=blue>h x</font> будет <font color=blue>Nothing</font>.

Имея это в виду, из нашего определения <font color=blue>h</font> получим:

<blockquote>h&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;g<br/>
h&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;\x&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#40;</font>f&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g<font>&#41;</font>&nbsp;&nbsp;<font color="#5d478b">--&nbsp;эквивалент&nbsp;(из&nbsp;определения&nbsp;&gt;=&gt;)</font><br/>
h&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;эквивалент</font><br/>
<font color="#5d478b">--&nbsp;предположим,&nbsp;что&nbsp;f&nbsp;x&nbsp;==&nbsp;Nothing</font><br/>
h&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font>Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g<font>&#41;</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;Nothing<br/>
<font color="#5d478b">--&nbsp;таким&nbsp;образом:</font><br/>
Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;Nothing</blockquote>

Теперь мы знаем, как оператор <font color=blue>(>>=)</font> реагирует на аргумент <font color=blue>Nothing</font>, - он просто возвращает тот же <font color=blue>Nothing</font>:

<blockquote>Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;Nothing<br/>
Just&nbsp;x&nbsp;&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<i><font color="#5d478b">{-&nbsp;нужно&nbsp;дописать&nbsp;-}</font></i></blockquote>

Обратите внимание, я здесь заменил <font color=blue>g</font> на <font color=blue>f</font>, и это корректно, ведь имена функций не важны. На практике мы вообще избавляемся от имен функций, если это возможно, и заменяем их специальным оператором <font color=blue>_</font> (нижнее подчеркивание), вот так:

<blockquote>Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;<font color="#339933">_</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;Nothing</blockquote>

Со вторым уравнением этого сделать нельзя, потому что функцию <font color=blue>f</font> мы еще будем использовать в определении.

Теперь давайте подойдем с другой стороны. Если <font color=blue>f x</font> <i>не</i> провалится, результатом будет значение <font color=blue>Just y</font> для некоторого <font color=blue>y</font>. Нам нужно "распаковать" значение <font color=blue>y</font> из <font color=blue>Just y</font>, которое мы бы потом передали функции <font color=blue>g</font>, и <font color=blue>g y</font> - это результат всей функции <font color=blue>h</font>:

<blockquote>h&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;g<br/>
h&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;\x&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#40;</font>f&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g<font>&#41;</font>&nbsp;&nbsp;<font color="#5d478b">--&nbsp;эквивалент&nbsp;(из&nbsp;определения&nbsp;&gt;=&gt;)</font><br/>
h&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;эквивалент</font><br/>
<font color="#5d478b">--&nbsp;предположим,&nbsp;что&nbsp;f&nbsp;x&nbsp;==&nbsp;Just&nbsp;y&nbsp;</font><br/>
h&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font>Just&nbsp;y&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g<font>&#41;</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;g&nbsp;y</blockquote>

Что дает нам вторую часть определения:

<blockquote>Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;Nothing<br/>
Just&nbsp;x&nbsp;&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;f&nbsp;x</blockquote>

Заметьте, что я заменил <font color=blue>y</font> на <font color=blue>x</font> и <font color=blue>g</font> на <font color=blue>f</font>. Опять же, имена переменных и функций не имеют значения до тех пор, пока вы последовательны.

На этом завершается определение оператора <font color=blue>>>=</font> для монады <font color=blue>Maybe</font>. Теперь нам нужно получить <font color=blue>return</font> для этой монады:

<blockquote><font>return</font>&nbsp;x&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font color="#339933">???</font></blockquote>

для любого значения <font color=blue>x</font>. Какие у нас есть варианты? Мы могли бы просто сказать, что

<blockquote><font>return</font>&nbsp;x&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;Nothing</blockquote>

для любого <font color=blue>x</font>. Однако мы бы нарушили монадные законы, если бы так сделали:

<blockquote><font>return</font>&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f&nbsp;&nbsp;<font color="#339933">==</font>&nbsp;&nbsp;f&nbsp;x<br/>
Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;&nbsp;f&nbsp;&nbsp;<font color="#339933">==</font>&nbsp;&nbsp;f&nbsp;x<br/>
Nothing&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#339933">==</font>&nbsp;&nbsp;f&nbsp;x&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;НЕВЕРНО!</font></blockquote>

Предполагая, что по крайней мере <i>некоторые</i> <font color=blue>f x</font> не <font color=blue>Nothing</font> (например, рассмотрим монадическую функцию <font color=blue>f x</font> = <font color=blue>Just x</font>), получим ошибку. Есть и другой вариант:

<blockquote><font>return</font>&nbsp;x&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;Just&nbsp;x</blockquote>

и он удовлетворяет монадным законам:

<blockquote><font>return</font>&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f<br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font>Just&nbsp;x<font>&#41;</font>&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;return&nbsp;для&nbsp;монады&nbsp;Maybe</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;&gt;=&nbsp;для&nbsp;монады&nbsp;Maybe</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;выполнение&nbsp;первого&nbsp;монадного&nbsp;закона</font><br/>
&nbsp;<br/>
Just&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;<font>return</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>return</font>&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;&gt;=&nbsp;для&nbsp;монады&nbsp;Maybe</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;Just&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;return&nbsp;для&nbsp;монады&nbsp;Maybe</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;выполнение&nbsp;второго&nbsp;монадного&nbsp;закона</font><br/>
&nbsp;<br/>
Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;<font>return</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;Nothing&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;&gt;=&nbsp;для&nbsp;монады&nbsp;Maybe</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;выполнение&nbsp;второго&nbsp;монадного&nbsp;закона</font></blockquote>

Раз законы соблюдаются, этот вариант и возьмем. Полное определение монады <font color=blue>Maybe</font> выглядит так:

<blockquote><font color="#06c">instance</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad">Monad</a></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;<font color="#06c">where</font><br/>
&nbsp;&nbsp;<font>return</font>&nbsp;x&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;Just&nbsp;x<br/>
&nbsp;<br/>
&nbsp;&nbsp;Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;Nothing<br/>
&nbsp;&nbsp;Just&nbsp;x&nbsp;&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;f&nbsp;x</blockquote>

Вау! Мы только что создали нашу первую монаду!

Просто чтобы обезопасить себя, проверим, что она удовлетворяет третьему монадному закону, который гласит:

<blockquote><font>&#40;</font>mv&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f<font>&#41;</font>&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g&nbsp;&nbsp;&nbsp;&nbsp;<font color="#339933">==</font>&nbsp;&nbsp;&nbsp;&nbsp;mv&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;<font>&#40;</font>\x&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#40;</font>f&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g<font>&#41;</font><font>&#41;</font></blockquote>

Сначала проверим закон для случая, когда mv = Nothing:

<blockquote><font>&#40;</font>Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f<font>&#41;</font>&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;с&nbsp;левой&nbsp;стороны</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;&gt;=</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;Nothing&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;&gt;=</font><br/>
&nbsp;<br/>
Nothing&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;<font>&#40;</font>\x&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#40;</font>f&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;с&nbsp;правой&nbsp;стороны</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;Nothing&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;&gt;=</font></blockquote>

Хорошо, проверка прошла успешно. Теперь посмотрим, работает ли он для <font color=blue>mv = Just v</font>, где <font color=blue>v</font> - некоторое значение:

<blockquote><font>&#40;</font><font>&#40;</font>Just&nbsp;v<font>&#41;</font>&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f<font>&#41;</font>&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;с&nbsp;левой&nbsp;стороны</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;v&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;&gt;=</font><br/>
&nbsp;<br/>
<font>&#40;</font>Just&nbsp;v<font>&#41;</font>&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;<font>&#40;</font>\x&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#40;</font>f&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;<font color="#5d478b">--&nbsp;с&nbsp;правой&nbsp;стороны</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font>\x&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#40;</font>f&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g<font>&#41;</font><font>&#41;</font>&nbsp;v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;&gt;=</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;v&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;нормальное&nbsp;применение&nbsp;функции&nbsp;(бета-редукция)</font></blockquote>

И тоже успешно. Значит, закон выполняется! Это <i>действительно</i> правильное определение монады <font color=blue>Maybe</font>! И публика сходит с ума!

В чем смысл всего этого? Это значит, что теперь мы легко можем соединить кучу монадических функций монады <font color=blue>Maybe</font>. Вы, возможно, задаетесь вопросом, почему это важно? Совсем нетрудно представить себе много монадических функций в монаде <font color=blue>Maybe</font>, то есть, таких, которые могут провалиться. Скажем, пусть у них будет тип <font color=blue>Int -> Maybe Int</font>. Вот три подобных функции:

<blockquote>f&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font>&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font><br/>
f&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font color="#06c">if</font>&nbsp;x&nbsp;`<font>mod</font>`&nbsp;<font color=red>2</font>&nbsp;<font color="#339933">==</font>&nbsp;<font color=red>0</font>&nbsp;<font color="#06c">then</font>&nbsp;Nothing&nbsp;<font color="#06c">else</font>&nbsp;Just&nbsp;<font>&#40;</font><font color=red>2</font>&nbsp;<font color="#339933">*</font>&nbsp;x<font>&#41;</font><br/>
&nbsp;<br/>
g&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font>&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font><br/>
g&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font color="#06c">if</font>&nbsp;x&nbsp;`<font>mod</font>`&nbsp;<font color=red>3</font>&nbsp;<font color="#339933">==</font>&nbsp;<font color=red>0</font>&nbsp;<font color="#06c">then</font>&nbsp;Nothing&nbsp;<font color="#06c">else</font>&nbsp;Just&nbsp;<font>&#40;</font><font color=red>3</font>&nbsp;<font color="#339933">*</font>&nbsp;x<font>&#41;</font><br/>
&nbsp;<br/>
h&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font>&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font><br/>
h&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font color="#06c">if</font>&nbsp;x&nbsp;`<font>mod</font>`&nbsp;<font color=red>5</font>&nbsp;<font color="#339933">==</font>&nbsp;<font color=red>0</font>&nbsp;<font color="#06c">then</font>&nbsp;Nothing&nbsp;<font color="#06c">else</font>&nbsp;Just&nbsp;<font>&#40;</font><font color=red>5</font>&nbsp;<font color="#339933">*</font>&nbsp;x<font>&#41;</font></blockquote>

Нам бы хотелось соединить их в одну функцию, которая есть результат применения по порядку <font color=blue>f</font>, <font color=blue>g</font>, <font color=blue>h</font>:

<blockquote>k&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font>&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe">Maybe</a></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font></blockquote>

И если какая-то из трех функций потерпит неудачу, функция <font color=blue>k</font> должна вернуть <font color=blue>Nothing</font>. Эта функция умножает входное число на 30, если оно не делится целочисленно на 2, 3 или 5 (а если делится, функция возвращает <font color=blue>Nothing</font>).

Из предыдущего материала, если вы его хорошо поняли, должно быть понятно, что вы можете задать <font color=blue>k</font> через монадическую композицию:

<blockquote>k&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;g&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;h</blockquote>

Или можете взять оператор <font color=blue>>>=</font>:

<blockquote>k&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;h</blockquote>

Или, возможно, вам нравится <font color=blue>do</font>-нотация:

<blockquote>k&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font color="#06c">do</font>&nbsp;y&nbsp;<font color="#339933">&lt;-</font>&nbsp;f&nbsp;x<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;<font color="#339933">&lt;-</font>&nbsp;g&nbsp;y<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;z</blockquote>

Это просто, как ни крути. {1: В оригинале - устойчивое выражение "Any way you slice it", аналогичное по смыслу. - Прим. пер.}

А вообще, функцию <font color=blue>h</font> можно определить вовсе без монадных конструкций, это будет выглядеть так:

<blockquote>k&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font color="#06c">case</font>&nbsp;f&nbsp;x&nbsp;<font color="#06c">of</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nothing&nbsp;<font color="#339933">-&gt;</font>&nbsp;Nothing<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Just&nbsp;y&nbsp;&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font color="#06c">case</font>&nbsp;g&nbsp;y&nbsp;<font color="#06c">of</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nothing&nbsp;<font color="#339933">-&gt;</font>&nbsp;Nothing<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Just&nbsp;z&nbsp;&nbsp;<font color="#339933">-&gt;</font>&nbsp;h&nbsp;z</blockquote>

Теперь понятно, почему монада <font color=blue>Maybe</font> важна. Она резко упрощает код, соединяя в цепь несколько <font color=blue>Maybe</font>-функций. Представьте себе грубый немонадический код для композиции десяти <font color=blue>Maybe</font>-функций в таком виде. Получился бы такой большой отступ вправо, что читаемость сильно пострадала бы, и общая структура вычислений потерялась бы в лабиринте вложенных <font color=blue>case</font>-выражений. Но с помощью монад композиция десяти функций записывается просто:

<blockquote>f11&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f1&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;f2&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;f3&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;f4&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;f5&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;f6&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;f7&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;f8&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;f9&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;f10</blockquote>

или (с использованием <font color=blue>>>=</font>):

<blockquote>f11&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f1&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f2&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f3&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f4&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f5&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f6&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f7&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f8&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f9&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f10</blockquote>

С помощью монад композиция монадических функций такая же простая, как композиция обычных (немонадических) функций.

Монада <font color=blue>Maybe</font> очень полезна для пояснения базовых концепций, но она может сбить с толку: многие люди ошибочно верят, что единственная роль монад в обработке нефункциональных вычислений, то есть, тех вычислений, которые работают с вводом/выводом (с консолью или с файлом), с изменяемым глобальным состоянием, и так далее. А я показал, что некоторые монадические вычисления могут быть с тем же успехом выполнены совсем без монад. Получается, что монады не что-то обязательное, они просто <i>очень</i> удобны. Именно поэтому я говорил, что даже несмотря на <i>первоначальную</i> причину изобретения монад для нефункциональных вычислений (работа с <font color=blue>IO</font>), у них, как оказалось, гораздо большая применимость. Из-за этого монады хороши.

А теперь перейдем к следующей монаде.

<h4>Монада <font color=blue>list</font> (список)</h4>

Если монада <font color=blue>Maybe</font> вам просто понравилась, то монаду <font color=blue>list</font> вы даже полюбите. ;-) В данном случае мы заполним следующее определение:

<blockquote><font color="#06c">instance</font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad">Monad</a></font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#06c">where</font><br/>
&nbsp;&nbsp;<font>&#40;</font><font color="#339933">&gt;&gt;=</font><font>&#41;</font>&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<i><font color="#5d478b">{-&nbsp;definition&nbsp;of&nbsp;&gt;&gt;=&nbsp;for&nbsp;lists&nbsp;-}</font></i><br/>
&nbsp;&nbsp;<font>return</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<i><font color="#5d478b">{-&nbsp;definition&nbsp;of&nbsp;return&nbsp;for&nbsp;lists&nbsp;-}</font></i></blockquote>

Заметьте, что для представления пустого списка <font color=blue>[]</font> мы используем списковый конструктор типа. Это небольшой хак (для списков в Haskell вшита специальная синтаксическая поддержка). Но ничего не поделаешь.

Как и для всех монад, первой задачей будет понять, что представляют из себя монадические функции этой монады. Для списка монадическая функция <font color=blue>f</font> выглядит так:

<blockquote>f&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;a&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#91;</font>b<font>&#93;</font></blockquote>

(где <font color=blue>[b]</font> значит, конечно, "список элементов типа <font color=blue>b</font>"). Вспомните, что обобщенное определение монадической функции записывается следующим образом:

<blockquote>f&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;a&nbsp;<font color="#339933">-&gt;</font>&nbsp;m&nbsp;b</blockquote>

для некоторой монады <font color=blue>m</font>, которая должна быть конструктором типа. Список - очевидный кандидат в монаду, поскольку "список из" - это конструктор типа (пусть даже его синтаксис жестко зашит в Haskell); по желанию, мы могли бы определить список сами:

<blockquote><font color="#06c">data</font>&nbsp;List&nbsp;a&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;Nil&nbsp;<font color="#339933">|</font>&nbsp;Cons&nbsp;a&nbsp;<font>&#40;</font>List&nbsp;a<font>&#41;</font></blockquote>

Тип монадическая функций для него выглядел бы соответственно:

<blockquote>f&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;a&nbsp;<font color="#339933">-&gt;</font>&nbsp;List&nbsp;b</blockquote>

Но мы будем все-таки придерживаться стандартного синтаксиса.

Чем являются функции подобного сорта? Обычно их понимают как функции, которые берут входное значение типа <font color=blue>a</font> и производят кучу значений типа <font color=blue>b</font>, собранных в один удобный контейнер (список). (И опять у нас монада, которая выглядит как контейнер.) Другой способ думать о них как о функциях, возвращающих множество значений, то есть, такие функции возвращают кучу разных значений "в одном". (Я не имею в виду "параллельно", потому что это подразумевает параллельную обработку, чего здесь нет.) Множественные выходные значения - это просто элементы списка. При использовании функций наподобие следующих открываются полезные перспективы:

<blockquote>f&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font>&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#91;</font><font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font><font>&#93;</font><br/>
g&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font>&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#91;</font><font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font><font>&#93;</font></blockquote>

Здесь и <font color=blue>f</font>, и <font color=blue>g</font> принимают одно <font color=blue>Int</font>-значение и возвращают много <font color=blue>Int</font>-значений. А что если мы хотим взять каждый результат функции <font color=blue>f</font> и применить его к каждому результату функции <font color=blue>g</font>, коллекционируя результаты применения? Было бы здорово, если бы это можно было сделать непосредственно, без распаковки каждого элемента из списков-результатов функций <font color=blue>g</font> и <font color=blue>f</font>. И это можно сделать с помощью монады списка.

Давайте перейдем к более материальным примерам этих функций:

<blockquote>f&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font>&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#91;</font><font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font><font>&#93;</font><br/>
f&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#91;</font>x<font color="#339933">-</font><font color=red>1</font><font color="#339933">,</font>&nbsp;x<font color="#339933">,</font>&nbsp;x<font color="#339933">+</font><font color=red>1</font><font>&#93;</font><br/>
&nbsp;<br/>
g&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;<font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font>&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#91;</font><font color=green><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int">Int</a></font><font>&#93;</font><br/>
g&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#91;</font><font color="#339933">-</font>x<font color="#339933">,</font>&nbsp;x<font>&#93;</font></blockquote>

Как же нам "скомпоновать" эти две функции? <font color=blue>f x</font> возвращает список, и для применения <font color=blue>g</font> к каждому элементу нам нужна функция <font color=blue>map</font>:

<blockquote>f&nbsp;<font color=red>10</font>&nbsp;&nbsp;&nbsp;<font color="#339933">--&gt;</font>&nbsp;&nbsp;<font>&#91;</font><font color=red>9</font><font color="#339933">,</font>&nbsp;<font color=red>10</font><font color="#339933">,</font>&nbsp;<font color=red>11</font><font>&#93;</font><br/>
<font>map</font>&nbsp;g&nbsp;<font>&#40;</font>f&nbsp;<font color=red>10</font><font>&#41;</font>&nbsp;&nbsp;<font color="#339933">--&gt;</font>&nbsp;&nbsp;<font>&#91;</font><font>&#91;</font><font color="#339933">-</font><font color=red>9</font><font color="#339933">,</font>&nbsp;<font color=red>9</font><font>&#93;</font><font color="#339933">,</font>&nbsp;<font>&#91;</font><font color="#339933">-</font><font color=red>10</font><font color="#339933">,</font>&nbsp;<font color=red>10</font><font>&#93;</font><font color="#339933">,</font>&nbsp;<font>&#91;</font><font color="#339933">-</font><font color=red>11</font><font color="#339933">,</font>&nbsp;<font color=red>11</font><font>&#93;</font><font>&#93;</font></blockquote>

Этот новый результат интересен, но он не может быть композицией <font color=blue>f</font> и <font color=blue>g</font>, потому что у него другой тип (список списков <font color=blue>Int</font>, а не просто список <font color=blue>Int</font>). Мы можем его сгладить в простой список функцией <font color=blue>concat</font> (которая просто соединяет списки в один):

<blockquote><font color="#5d478b">--&nbsp;Обратите&nbsp;особое&nbsp;внимание&nbsp;на&nbsp;тип&nbsp;concat:&nbsp;[[a]]&nbsp;-&gt;&nbsp;[a]</font><br/>
<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;g&nbsp;<font>&#40;</font>f&nbsp;<font color=red>10</font><font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;<font color="#339933">--&gt;</font>&nbsp;&nbsp;<font>&#91;</font><font color="#339933">-</font><font color=red>9</font><font color="#339933">,</font>&nbsp;<font color=red>9</font><font color="#339933">,</font>&nbsp;<font color="#339933">-</font><font color=red>10</font><font color="#339933">,</font>&nbsp;<font color=red>10</font><font color="#339933">,</font>&nbsp;<font color="#339933">-</font><font color=red>11</font><font color="#339933">,</font>&nbsp;<font color=red>11</font><font>&#93;</font></blockquote>

Мы получили набор всех результатов, произведенных через применение <font color=blue>f</font> к целому числу и затем применив <font color=blue>g</font> к тому, что получилось после <font color=blue>f</font>. Если вы думаете об <font color=blue>f</font> и <font color=blue>g</font> как о функциях, которые создают множество результатов "здесь и сейчас", их выходные значения будут множеством всех возможных применений сначала функции <font color=blue>f</font>, а затем функции <font color=blue>g</font>. Мы можем представить это в виде диаграммы:

<pre>
                  g   |  -9
           |  9 ----> |
           |          |   9
           |
       f   |      g   | -10
  10 ----> | 10 ----> |
           |          |  10
           |
           |      g   | -11
           | 11 ----> |
                      |  11</pre>

Хорошо видно, что композиция <font color=blue>f</font> и <font color=blue>g</font> - это множество всех путей между <font color=blue>f</font> и <font color=blue>g</font>.

Любопытно, что мы только что определили оператор <font color=blue>>>=</font> для монады списка! Он задан так:

<blockquote><font color="#5d478b">--&nbsp;mv&nbsp;::&nbsp;[a]</font><br/>
<font color="#5d478b">--&nbsp;g&nbsp;&nbsp;::&nbsp;a&nbsp;-&gt;&nbsp;[b]</font><br/>
mv&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;g&nbsp;mv<font>&#41;</font></blockquote>

где <font color=blue>mv</font> - это монадическое значение в монаде списка (которое просто список значений типа <font color=blue>a</font>). В предыдущем примере <font color=blue>mv</font> - это результат вычисления <font color=blue>f 10</font>. Определение работает даже для пустого списка <font color=blue>[]</font>, поскольку отображение (mapping) функции на пустой список даст пустой список, и <font color=blue>concat</font> для пустого списка тоже всегда пустой список. Получилось очень простое определение оператора <font color=blue>>>=</font>.

[Заметка для фанатов GHC: Я верю, что оператор <font color=blue>>>=</font> в компиляторе GHC реализован более эффективно и по-другому, хотя и делает то же самое.]

Как задать <font color=blue>return</font> для этой монады? Давайте подумаем о монадическом значении-списке как о "действии", возвращающем много значений. Вспомним, что <font color=blue>return</font> должен быть эквивалентом единичной функции, - как и в других монадах. Что будет эквивалентом единичной функции в монаде списка? Она должна брать значение и возвращать "действие", которое после "вычисления" просто вернет это значение. Так мы поняли, что <font color=blue>return</font> не может просто возвращать пустой список. Разумно предположить о <font color=blue>return</font> что-то такое:

<blockquote><font>return</font>&nbsp;<font color="#66cc66"><b>::</b></font>&nbsp;a&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#91;</font>b<font>&#93;</font><br/>
<font>return</font>&nbsp;x&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#91;</font>x<font>&#93;</font></blockquote>

То есть, <font color=blue>return</font> элементарно создает список из отдельного значения. Проверим, соблюдаются ли в этом случае монадные законы:

<blockquote><font color="#5d478b">--&nbsp;f&nbsp;::&nbsp;a&nbsp;-&gt;&nbsp;[b]</font><br/>
<font color="#5d478b">--&nbsp;x&nbsp;::&nbsp;a</font><br/>
<font>return</font>&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;f&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f&nbsp;<font>&#40;</font><font>return</font>&nbsp;x<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;&gt;=</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f&nbsp;<font>&#91;</font>x<font>&#93;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;return</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font>&#91;</font>f&nbsp;x<font>&#93;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;map</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;f&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;concat</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;выполнение&nbsp;первого&nbsp;монадного&nbsp;закона</font><br/>
&nbsp;<br/>
<font color="#5d478b">--&nbsp;mv&nbsp;::&nbsp;[a]</font><br/>
mv&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;<font>return</font>&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>return</font>&nbsp;mv<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;&gt;=</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>&#40;</font>\x&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#91;</font>x<font>&#93;</font><font>&#41;</font>&nbsp;mv<font>&#41;</font>&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;return</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;Два&nbsp;случая:</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;Случай&nbsp;1:&nbsp;&nbsp;mv&nbsp;==&nbsp;[]</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>&#40;</font>\x&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#91;</font>x<font>&#93;</font><font>&#41;</font>&nbsp;<font>&#91;</font><font>&#93;</font><font>&#41;</font>&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;mv</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;map</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;concat</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;mv&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;mv</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;Случай&nbsp;2:&nbsp;&nbsp;mv&nbsp;==&nbsp;[v1,&nbsp;v2,&nbsp;...]</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>&#40;</font>\x&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>&#91;</font>x<font>&#93;</font><font>&#41;</font>&nbsp;<font>&#91;</font>v1<font color="#339933">,</font>&nbsp;v2<font color="#339933">,</font>&nbsp;<font color="#339933">...</font><font>&#93;</font><font>&#41;</font>&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;mv</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font>&#91;</font><font>&#91;</font>v1<font>&#93;</font><font color="#339933">,</font>&nbsp;<font>&#91;</font>v2<font>&#93;</font><font color="#339933">,</font>&nbsp;<font color="#339933">...</font><font>&#93;</font>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;map</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>&#91;</font>v1<font color="#339933">,</font>&nbsp;v2<font color="#339933">,</font>&nbsp;<font color="#339933">...</font><font>&#93;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;concat</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;mv&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;mv</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;выполнение&nbsp;второго&nbsp;монадного&nbsp;закона</font></blockquote>

Ну что ж, два закона для монады доказаны. Возможно, вам захочется попробовать другие определения <font color=blue>return</font> (когда <font color=blue>return</font> возвращает, например, конкретный список <font color=blue>[0, 2, 3]</font>, или когда возвращает бесконечное количество копий своего аргумента), и вы увидите, что они все будут нарушать монадные законы. Это хороший способ попрактиковаться с монадными законами.

Осталось доказать третий монадный закон, прежде чем называть список настоящей монадой. Надо сказать, это труднее, но попробуем все равно. Упростим себе задачу - возьмем "приятную" форму третьего монадного закона (определенного через монадическую композицию). Для начала нам нужно определение монадической композиции списков:

<blockquote><font color="#5d478b">--&nbsp;Третий&nbsp;монадный&nbsp;закон&nbsp;(приятная&nbsp;версия):&nbsp;&nbsp;</font><br/>
<font>&#40;</font>f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;g<font>&#41;</font>&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;h&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;<font>&#40;</font>g&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;h<font>&#41;</font><br/>
<font color="#5d478b">--&nbsp;По&nbsp;определению:&nbsp;</font><br/>
f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;g&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;\x&nbsp;<font color="#339933">-&gt;</font>&nbsp;f&nbsp;x&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;g<br/>
<font color="#5d478b">--&nbsp;Возьмем&nbsp;определение&nbsp;&gt;&gt;=&nbsp;для&nbsp;монады&nbsp;списка:</font><br/>
f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;g&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;\x&nbsp;<font color="#339933">-&gt;</font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;g&nbsp;<font>&#40;</font>f&nbsp;x<font>&#41;</font><font>&#41;</font><br/>
<font color="#5d478b">--&nbsp;Можно&nbsp;переписать&nbsp;выражение&nbsp;через&nbsp;оператор&nbsp;композиции&nbsp;(.):</font><br/>
f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;g&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;g&nbsp;<font color="#339933">.</font>&nbsp;f</blockquote>

Кроме того, я воспользуюсь несколькими свойствами функций <font color=blue>concat</font> и <font color=blue>map</font>. Вам пока придется принять их на веру; потом я покажу, как их получить:

<blockquote><font color="#5d478b">--&nbsp;уравнение&nbsp;1:</font><br/>
<font>map</font>&nbsp;<font>&#40;</font>f&nbsp;<font color="#339933">.</font>&nbsp;g<font>&#41;</font>&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>map</font>&nbsp;f&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;g<br/>
<font color="#5d478b">--&nbsp;уравнение&nbsp;2:</font><br/>
<font>map</font>&nbsp;f&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f<font>&#41;</font><br/>
<font color="#5d478b">--&nbsp;уравнение&nbsp;3:</font><br/>
<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font>&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font></blockquote>

Я как-то уже говорил, что точка <font color=blue>(.)</font> является (чистым) оператором композиции. У нее меньший приоритет, чем у применения функции, следовательно, выражения вроде <font color=blue>map f . map g</font> значат лишь <font color=blue>(map f) . (map g)</font>. Программисты на Haskell обычно избавляются от скобок, где это возможно. Также важно понимать, что, например, функция <font color=blue>map f</font> - это функция <font color=blue>map</font>, у которой вообще-то два аргумента (такие: функция для элементов списка и сам список). Если вы вспомните, что я рассказывал про карринг, то вы догадаетесь, что <font color=blue>map f</font> - это функция, которая принимает один список и возвращает другой, где к каждому элементу применена функция <font color=blue>f</font>. Каррингом мы теперь будем много пользоваться.

Итак, вывод доказательства с учетом всего сказанного:

<blockquote><font>&#40;</font>f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;g<font>&#41;</font>&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;h<br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;g&nbsp;<font color="#339933">.</font>&nbsp;f<font>&#41;</font>&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;=&gt;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;h&nbsp;<font color="#339933">.</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;g&nbsp;<font color="#339933">.</font>&nbsp;f<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;=&gt;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;h&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;g&nbsp;<font color="#339933">.</font>&nbsp;f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;удаляем&nbsp;ненужные&nbsp;скобки</font><br/>
&nbsp;<br/>
f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;<font>&#40;</font>g&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;h<font>&#41;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;<font color="#339933">&gt;=&gt;</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;h&nbsp;<font color="#339933">.</font>&nbsp;g<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;=&gt;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;h&nbsp;<font color="#339933">.</font>&nbsp;g<font>&#41;</font>&nbsp;<font color="#339933">.</font>&nbsp;f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;&gt;=&gt;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;h<font>&#41;</font>&nbsp;<font color="#339933">.</font>&nbsp;g<font>&#41;</font>&nbsp;<font color="#339933">.</font>&nbsp;f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;эквивалентное&nbsp;преобразование</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;h<font>&#41;</font><font>&#41;</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;g<font>&#41;</font>&nbsp;<font color="#339933">.</font>&nbsp;f&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;1</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;h<font>&#41;</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;g&nbsp;<font color="#339933">.</font>&nbsp;f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;удаляем&nbsp;ненужные&nbsp;скобки</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;h<font>&#41;</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;g&nbsp;<font color="#339933">.</font>&nbsp;f&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;1</font></blockquote>

Теперь нам нужно показать, что:

<blockquote><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;h&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font>&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;h<font>&#41;</font></blockquote>

Давайте это докажем.

<blockquote><font color="#5d478b">--&nbsp;добавим&nbsp;скобки&nbsp;для&nbsp;ясности:</font><br/>
<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;h&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font><font>&#41;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;h<font>&#41;</font><br/>
<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;2:</font><br/>
<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;h<font>&#41;</font>&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;h<font>&#41;</font><br/>
<font color="#5d478b">--&nbsp;добавим&nbsp;скобки&nbsp;для&nbsp;ясности:</font><br/>
<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font><font>&#41;</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;h<font>&#41;</font>&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;h<font>&#41;</font><br/>
<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;3:</font><br/>
<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;h<font>&#41;</font>&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;h<font>&#41;</font></blockquote>

И это конец. Фууух! На самом деле хаскеллисты редко этим занимаются, но доказательства необходимы, чтобы показать, что предполагаемая монада - это действительно монада.

<blockquote><blockquote><b>Заметка на полях: Вывод тождеств с <font color=blue>map/concat</font> (уравнения 1, 2 и 3)</b>

<u><b>Подготовка</b></u>

Прежде чем приступать к доказательствам тождеств, нам сначала надо доказать несколько других (математика трудна!). Перечислим их:

<blockquote><font color="#5d478b">--&nbsp;Выражение&nbsp;4:</font><br/>
<font>concat</font>&nbsp;<font>&#40;</font>x:xs<font>&#41;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;xs<br/>
<font color="#5d478b">--&nbsp;Выражение&nbsp;5:</font><br/>
<font>concat</font>&nbsp;<font>&#40;</font>x&nbsp;<font color="#339933">++</font>&nbsp;y<font>&#41;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;y<br/>
<font color="#5d478b">--&nbsp;Выражение&nbsp;6:</font><br/>
<font>map</font>&nbsp;f&nbsp;<font>&#40;</font>x&nbsp;<font color="#339933">++</font>&nbsp;y<font>&#41;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>map</font>&nbsp;f&nbsp;y</blockquote>

Выражение 4 следует из определения <font color=blue>concat</font>. Выражение 5 легко доказать через индукцию по x с использованием уравнения 4.

<blockquote><font color="#5d478b">--&nbsp;базовый&nbsp;случай:&nbsp;x&nbsp;-&nbsp;пустой&nbsp;список</font><br/>
<font>concat</font>&nbsp;<font>&#40;</font><font>&#91;</font><font>&#93;</font>&nbsp;<font color="#339933">++</font>&nbsp;y<font>&#41;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;y<br/>
<font>concat</font>&nbsp;y&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;y&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;concat&nbsp;[]</font><br/>
<font>concat</font>&nbsp;y&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;++</font><br/>
<font color="#5d478b">--&nbsp;Верно.</font><br/>
&nbsp;<br/>
<font color="#5d478b">--&nbsp;индукция:&nbsp;список&nbsp;x&nbsp;не&nbsp;пустой;&nbsp;x1&nbsp;-&nbsp;голова&nbsp;списка;&nbsp;xs&nbsp;-&nbsp;хвост&nbsp;списка.</font><br/>
<font>concat</font>&nbsp;<font>&#40;</font><font>&#40;</font>x1:xs<font>&#41;</font>&nbsp;<font color="#339933">++</font>&nbsp;y<font>&#41;</font>&nbsp;<br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font>x1&nbsp;:&nbsp;<font>&#40;</font>xs&nbsp;<font color="#339933">++</font>&nbsp;y<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;++</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;x1&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font>xs&nbsp;<font color="#339933">++</font>&nbsp;y<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;4</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;x1&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;xs&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;y&nbsp;&nbsp;<font color="#5d478b">--&nbsp;inductive&nbsp;hypothesis</font><br/>
&nbsp;<br/>
<font>concat</font>&nbsp;<font>&#40;</font>x1:xs<font>&#41;</font>&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;y<br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;x1&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;xs&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;y&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;4</font><br/>
<font color="#5d478b">--&nbsp;Верно,&nbsp;что&nbsp;и&nbsp;требовалось&nbsp;доказать.</font></blockquote>

Уравнение 6 можно доказать таким же образом:

<blockquote><font color="#5d478b">--&nbsp;базовый&nbsp;случай:&nbsp;x&nbsp;-&nbsp;пустой&nbsp;список</font><br/>
<font>map</font>&nbsp;f&nbsp;<font>&#40;</font><font>&#91;</font><font>&#93;</font>&nbsp;<font color="#339933">++</font>&nbsp;y<font>&#41;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#339933">++</font>&nbsp;<font>map</font>&nbsp;f&nbsp;y<br/>
<font>map</font>&nbsp;f&nbsp;y&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#339933">++</font>&nbsp;<font>map</font>&nbsp;f&nbsp;y<br/>
<font>map</font>&nbsp;f&nbsp;y&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;y<br/>
<font color="#5d478b">--&nbsp;Верно.</font><br/>
&nbsp;<br/>
<font color="#5d478b">--&nbsp;индукция:&nbsp;список&nbsp;x&nbsp;-&nbsp;не&nbsp;пустой;&nbsp;x1&nbsp;-&nbsp;голова&nbsp;списка;&nbsp;xs&nbsp;-&nbsp;хвост&nbsp;списка.</font><br/>
<font>map</font>&nbsp;f&nbsp;<font>&#40;</font>x&nbsp;<font color="#339933">++</font>&nbsp;y<font>&#41;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#40;</font><font>&#40;</font>x1:xs<font>&#41;</font>&nbsp;<font color="#339933">++</font>&nbsp;y<font>&#41;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#40;</font>x1&nbsp;:&nbsp;<font>&#40;</font>xs&nbsp;<font color="#339933">++</font>&nbsp;y<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;++</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;x1&nbsp;:&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#40;</font>xs&nbsp;<font color="#339933">++</font>&nbsp;y<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;map</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;f&nbsp;x1&nbsp;:&nbsp;<font>&#40;</font><font>map</font>&nbsp;f&nbsp;xs&nbsp;<font color="#339933">++</font>&nbsp;<font>map</font>&nbsp;f&nbsp;y<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;inductive&nbsp;hypothesis</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font>f&nbsp;x1&nbsp;:&nbsp;<font>map</font>&nbsp;f&nbsp;xs<font>&#41;</font>&nbsp;<font color="#339933">++</font>&nbsp;<font>map</font>&nbsp;f&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;++</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#40;</font>x1:xs<font>&#41;</font>&nbsp;<font color="#339933">++</font>&nbsp;<font>map</font>&nbsp;f&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;map</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>map</font>&nbsp;f&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;x</font><br/>
<font color="#5d478b">--&nbsp;Верно,&nbsp;что&nbsp;и&nbsp;требовалось&nbsp;доказать.</font></blockquote>

Теперь с этим докажем уравнения 1, 2 и 3.

<u><b>Уравнение 1:</b></u>

<blockquote><font>map</font>&nbsp;<font>&#40;</font>f&nbsp;<font color="#339933">.</font>&nbsp;g<font>&#41;</font>&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>map</font>&nbsp;f&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;g</blockquote>

Воспользуемся индукцией по неявному аргументу-списку с обеих сторон, а также определением <font color=blue>map</font>:

<blockquote><font color="#5d478b">--&nbsp;базовый&nbsp;случай:&nbsp;пустой&nbsp;список</font><br/>
<font>map</font>&nbsp;<font>&#40;</font>f&nbsp;<font color="#339933">.</font>&nbsp;g<font>&#41;</font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#91;</font><font>&#93;</font><br/>
<font>&#40;</font><font>map</font>&nbsp;f&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;g<font>&#41;</font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#40;</font><font>map</font>&nbsp;g&nbsp;<font>&#91;</font><font>&#93;</font><font>&#41;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#91;</font><font>&#93;</font><br/>
<font color="#5d478b">--&nbsp;OK</font><br/>
&nbsp;<br/>
<font color="#5d478b">--&nbsp;индукция:&nbsp;непустой&nbsp;список:</font><br/>
<font>map</font>&nbsp;<font>&#40;</font>f&nbsp;<font color="#339933">.</font>&nbsp;g<font>&#41;</font>&nbsp;<font>&#40;</font>x:xs<font>&#41;</font>&nbsp;<br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font><font>&#40;</font>f&nbsp;<font color="#339933">.</font>&nbsp;g<font>&#41;</font>&nbsp;x<font>&#41;</font>&nbsp;:&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>&#40;</font>f&nbsp;<font color="#339933">.</font>&nbsp;g<font>&#41;</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;map</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font>f&nbsp;<font>&#40;</font>g&nbsp;x<font>&#41;</font><font>&#41;</font>&nbsp;:&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>&#40;</font>f&nbsp;<font color="#339933">.</font>&nbsp;g<font>&#41;</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;(.)</font><br/>
<font>&#40;</font><font>map</font>&nbsp;f&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;g<font>&#41;</font>&nbsp;<font>&#40;</font>x:xs<font>&#41;</font>&nbsp;<br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#40;</font><font>map</font>&nbsp;g&nbsp;<font>&#40;</font>x:xs<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;(.)</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#40;</font><font>&#40;</font>g&nbsp;x<font>&#41;</font>&nbsp;:&nbsp;<font>&#40;</font><font>map</font>&nbsp;g&nbsp;xs<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;map</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font>f&nbsp;<font>&#40;</font>g&nbsp;x<font>&#41;</font><font>&#41;</font>&nbsp;:&nbsp;<font>&#40;</font><font>map</font>&nbsp;f&nbsp;<font>&#40;</font><font>map</font>&nbsp;g&nbsp;xs<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;map</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font>f&nbsp;<font>&#40;</font>g&nbsp;x<font>&#41;</font><font>&#41;</font>&nbsp;:&nbsp;<font>&#40;</font><font>&#40;</font><font>map</font>&nbsp;f&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;g<font>&#41;</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;(.)</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#40;</font>f&nbsp;<font>&#40;</font>g&nbsp;x<font>&#41;</font><font>&#41;</font>&nbsp;:&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>&#40;</font>f&nbsp;<font color="#339933">.</font>&nbsp;g<font>&#41;</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;inductive&nbsp;hypothesis</font><br/>
<font color="#5d478b">--&nbsp;Верно,&nbsp;что&nbsp;и&nbsp;требовалось&nbsp;доказать.</font></blockquote>

<u><b>Уравнение 2:</b></u>

<blockquote><font>map</font>&nbsp;f&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f<font>&#41;</font></blockquote>

Докажем по индукции:

<blockquote><font color="#5d478b">--&nbsp;базовый&nbsp;случай:&nbsp;пустой&nbsp;список</font><br/>
<font>&#40;</font><font>map</font>&nbsp;f&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font><font>&#41;</font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font>&#91;</font><font>&#93;</font><font>&#41;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#91;</font><font>&#93;</font><br/>
<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f<font>&#41;</font><font>&#41;</font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f<font>&#41;</font>&nbsp;<font>&#91;</font><font>&#93;</font><font>&#41;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#91;</font><font>&#93;</font><br/>
<font color="#5d478b">--&nbsp;OK</font><br/>
&nbsp;<br/>
<font color="#5d478b">--&nbsp;индукция:&nbsp;непустой&nbsp;список</font><br/>
<font>&#40;</font><font>map</font>&nbsp;f&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font><font>&#41;</font>&nbsp;<font>&#40;</font>x:xs<font>&#41;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font>&#40;</font>x:xs<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;(.)</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;<font>&#40;</font>x&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;4&nbsp;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f&nbsp;<font>&#40;</font><font>concat</font>&nbsp;xs<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;6</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>&#40;</font><font>&#40;</font><font>map</font>&nbsp;f&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font><font>&#41;</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;(.)</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>&#40;</font><font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f<font>&#41;</font><font>&#41;</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;<font color="#5d478b">--&nbsp;inductive&nbsp;hypothesis</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f<font>&#41;</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;(.)</font><br/>
&nbsp;<br/>
<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f<font>&#41;</font><font>&#41;</font>&nbsp;<font>&#40;</font>x:xs<font>&#41;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f<font>&#41;</font>&nbsp;<font>&#40;</font>x:xs<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;(.)</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f&nbsp;x&nbsp;:&nbsp;<font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f<font>&#41;</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;map</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>map</font>&nbsp;f&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;f<font>&#41;</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;4</font><br/>
<font color="#5d478b">--&nbsp;Верно,&nbsp;что&nbsp;и&nbsp;требовалось&nbsp;доказать.</font></blockquote>

<u><b>Уравнение 3:</b></u>

<blockquote><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font>&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;&nbsp;<font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font></blockquote>

Как всегда, воспользуемся индукцией:

<blockquote><font color="#5d478b">--&nbsp;базовый&nbsp;случай:&nbsp;пустой&nbsp;список</font><br/>
<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font><font>&#41;</font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font>&#91;</font><font>&#93;</font><font>&#41;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#91;</font><font>&#93;</font><br/>
<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font><font>&#41;</font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>concat</font>&nbsp;<font>&#91;</font><font>&#93;</font><font>&#41;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#91;</font><font>&#93;</font>&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>&#91;</font><font>&#93;</font><br/>
<font color="#5d478b">--&nbsp;Верно</font><br/>
&nbsp;<br/>
<font color="#5d478b">--&nbsp;индукция:&nbsp;непустой&nbsp;список</font><br/>
<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font><font>&#41;</font>&nbsp;<font>&#40;</font>x:xs<font>&#41;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font>&#40;</font>x:xs<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;(.)</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font>x&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;4</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;5</font><br/>
&nbsp;<br/>
<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font><font>&#41;</font>&nbsp;<font>&#40;</font>x:xs<font>&#41;</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font>x:xs<font>&#41;</font><font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;(.)</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;x&nbsp;:&nbsp;<font>map</font>&nbsp;<font>concat</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;map</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>map</font>&nbsp;<font>concat</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;уравнению&nbsp;4</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>map</font>&nbsp;<font>concat</font><font>&#41;</font>&nbsp;xs&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;(.)</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;<font color="#339933">.</font>&nbsp;<font>concat</font><font>&#41;</font>&nbsp;xs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;inductive&nbsp;hypothesis</font><br/>
&nbsp;&nbsp;<font color="#66cc66"><b>=</b></font>&nbsp;<font>concat</font>&nbsp;x&nbsp;<font color="#339933">++</font>&nbsp;<font>concat</font>&nbsp;<font>&#40;</font><font>concat</font>&nbsp;xs<font>&#41;</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#5d478b">--&nbsp;по&nbsp;определению&nbsp;(.)</font><br/>
<font color="#5d478b">--&nbsp;Верно,&nbsp;что&nbsp;и&nbsp;требовалось&nbsp;доказать.</font></blockquote>
</blockquote></blockquote>

Я надеюсь, теперь у вас нет сомнений, что монада списка по-настоящему монада. ;-)

И самый интересный вопрос здесь, конечно, такой: а что мы можем <i>сделать такого</i> с монадой-списком, что было бы сложно без монады? Вот вам простой пример: найти все пары чисел между 1 и 6, чья сумма равняется 7 (числа - это, например, игральные кости). С помощью монады списка решить задачу элементарно:

<blockquote><font color="#5d478b">--&nbsp;Используем&nbsp;&lt;font&nbsp;color=blue&gt;do&lt;/font&gt;-нотацию:</font><br/>
<font color="#06c">do</font>&nbsp;n1&nbsp;<font color="#339933">&lt;-</font>&nbsp;<font>&#91;</font>1<font color="#339933">..</font>6<font>&#93;</font><br/>
&nbsp;&nbsp;&nbsp;n2&nbsp;<font color="#339933">&lt;-</font>&nbsp;<font>&#91;</font>1<font color="#339933">..</font>6<font>&#93;</font><br/>
&nbsp;&nbsp;&nbsp;<font color="#06c">if</font>&nbsp;n1&nbsp;<font color="#339933">+</font>&nbsp;n2&nbsp;<font color="#339933">==</font>&nbsp;<font color=red>7</font>&nbsp;<font color="#06c">then</font>&nbsp;<font>return</font>&nbsp;<font>&#40;</font>n1<font color="#339933">,</font>&nbsp;n2<font>&#41;</font>&nbsp;<font color="#06c">else</font>&nbsp;<font>&#91;</font><font>&#93;</font><br/>
<font color="#5d478b">--&nbsp;Результат:&nbsp;[(1,6),(2,5),(3,4),(4,3),(5,2),(6,1)]</font></blockquote>

А еще можно переписать без <font color=blue>do</font>-нотации, только получится непонятно:

<blockquote><font>&#91;</font>1<font color="#339933">..</font>6<font>&#93;</font>&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;\n1&nbsp;<font color="#339933">-&gt;</font><br/>
&nbsp;&nbsp;<font>&#91;</font>1<font color="#339933">..</font>6<font>&#93;</font>&nbsp;<font color="#339933">&gt;&gt;=</font>&nbsp;\n2&nbsp;<font color="#339933">-&gt;</font><br/>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#06c">if</font>&nbsp;n1&nbsp;<font color="#339933">+</font>&nbsp;n2&nbsp;<font color="#339933">==</font>&nbsp;<font color=red>7</font>&nbsp;<font color="#06c">then</font>&nbsp;<font>return</font>&nbsp;<font>&#40;</font>n1<font color="#339933">,</font>&nbsp;n2<font>&#41;</font>&nbsp;<font color="#06c">else</font>&nbsp;<font>&#91;</font><font>&#93;</font></blockquote>

Как это работает? Вам стоило бы самим сесть и проследить все вычисления, связанные с <font color=blue>>>=</font> и <font color=blue>return</font> для списков, но вот объяснение на пальцах. Итак: <font color=blue>[1..6]</font> - это монадическое значение в монаде списка, и <font color=blue>n1</font> пробегает <i>всех их</i> за раз. <font color=blue>n2</font> - точно также. И возвращаются все пары <font color=blue>(n1, n2)</font>, чья сумма корректна. Вот так мы вычисляем функцию над всеми элементами, как если бы они были одним элементом. В этом суть монады списка.

Если вы значительно поднаторели в программировании на Haskell, у вас в голове, наверно, завыла сирена. "Как же так!" - слышу я ваше возмущение. "А почему бы просто не воспользоваться генераторами списков (<font color=blue>list comprehensions</font>)?" И действительно:

<blockquote><font>&#91;</font><font>&#40;</font>n1<font color="#339933">,</font>&nbsp;n2<font>&#41;</font>&nbsp;<font color="#339933">|</font>&nbsp;n1&nbsp;<font color="#339933">&lt;-</font>&nbsp;<font>&#91;</font>1<font color="#339933">..</font>6<font>&#93;</font><font color="#339933">,</font>&nbsp;n2&nbsp;<font color="#339933">&lt;-</font>&nbsp;<font>&#91;</font>1<font color="#339933">..</font>6<font>&#93;</font><font color="#339933">,</font>&nbsp;n1&nbsp;<font color="#339933">+</font>&nbsp;n2&nbsp;<font color="#339933">==</font>&nbsp;<font color=red>7</font><font>&#93;</font></blockquote>

Возможности монады списка и генераторов списка идентичны. Выбор того или иного синтаксиса зависит от предпочтений, а также он может определяться задачей. В своей статье <font color=blue>"Comprehending Monads"</font> <font color=blue>Phil Walder</font> (в названии есть игра слов, как и во многих его статьях) даже предлагал распространить синтаксис генераторов списков на произвольные монады. Это предложение было все-таки отклонено в пользу текущей записи.

Монада списков - это нечто большее, чем просто альтернатива генераторам списков. С одной стороны, есть много очень общих функций, которые работают с воплощениями любых монад; с монадой списка они тоже будут работать. С другой стороны есть расширение класса типов <font color=blue>Monad</font>, которое называется <font color=blue>MonadPlus</font>. Оно дополняет функциональность монад (конкретно, там определяется "нулевой" элемент для монады и вводится операция "сложения" двух монадических значений). Списки сделаны воплощениями как <font color=blue>Monad</font>, так и <font color=blue>MonadPlus</font>, и это значит, что общие функции из <font color=blue>MonadPlus</font> будут работать и над списками. (Есть, например, обобщение функции <font color=blue>concat</font> - функия <font color=blue>msum</font>, которая работает со всеми воплощениями <font color=blue>MonadPlus</font>, в том числе и со списками.) Очень здорово пользоваться обобщенными функциями, которые могут работать со многими типами данных, но не задавать их для каждого типа отдельно. Это чистая победа.

<h5>В следующий раз</h5>

В следующей статье мы познакомимся с монадами, позволяющими отслеживать ошибки.

<h5>Содержание</h5>
<a href="http://habrahabr.ru/blogs/Haskell/127556/">Часть 1: основы</a>
<a href="http://habrahabr.ru/blogs/Haskell/128070/">Часть 2: функции &gt;&gt;= и return</a>
<a href="http://habrahabr.ru/blogs/Haskell/128538/">Часть 3: Монадные Законы</a>
<a href="http://habrahabr.ru/blogs/Haskell/129909/">Часть 4: Монада Maybe и монада списка</a>